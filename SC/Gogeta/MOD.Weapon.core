// >> ARG_BYTE		int
// >> ARG_CHAR		int
// >> ARG_SHORT		int
// >> ARG_LONG		int
// >> ARG_ANGLE		float
// >> ARG_COORD		float
// >> ARG_STRING	string
// >> ARG_ENTITY	int

stock SPR_SHINE;
stock SPR_BLACK;

stock SPR_YELLOW_S;		// Yellow Beam Head
stock SPR_YELLOW_T;		// Yellow Beam Trail

stock SPR_BLUE_S;
stock SPR_BLUE_T;
stock SPR_RED_S;
stock SPR_RED_T;

stock SPR_BIGBANG;
stock SPR_BIGBANGRED;
stock SPR_BIGBANG_T;

stock SPR_SUKAME_S;
stock SPR_SUKAME_E;
stock SPR_SUKAME_T;

stock SPR_BIGBANGKAME;
stock SPR_REDBIGBANGKAME;

stock ICON_BIGBANG;
stock C_ICON_BIGBANG;

stock SPR_JUBKAME_S;		// Kamehameha Beam Head
stock SPR_JUBKAME_E;		// Kamehameha Beam End
stock SPR_JUBKAME_T;		// Kamehameha Beam Trail

stock MOD_Weapon_PreCache ()
{
	SPR_SHINE = precache_model( "sprites/ecx.shine.spr" );
	SPR_BLACK	= precache_model( "sprites/black.spr" );

	SPR_BLUE_S = precache_model( "sprites/w_gb_b_s.spr" );
	SPR_BLUE_T = precache_model( "sprites/w_gb_b_t.spr" );

	SPR_RED_S = precache_model( "sprites/w_gb_r_s.spr" );
	SPR_RED_T = precache_model( "sprites/w_gb_r_t.spr" );


	SPR_BIGBANG = precache_model( "sprites/w_bigbang.spr" );
	SPR_BIGBANGRED = precache_model( "sprites/w_jubeikame_c.spr" );
	SPR_BIGBANG_T = precache_model( "sprites/w_sukame_t.spr" );
	
	SPR_SUKAME_S = precache_model( "sprites/w_sukame_s.spr" );
	SPR_SUKAME_T = precache_model( "sprites/w_sukame_t.spr" );
	SPR_SUKAME_E = precache_model( "sprites/w_sukame_e.spr" );

	SPR_BIGBANGKAME = precache_model( "sprites/wc_bbkhh.spr" );
	SPR_REDBIGBANGKAME = precache_model( "sprites/wc_rbbkhh.spr" );

	SPR_JUBKAME_S = precache_model( "sprites/w_jubeikame_s.spr" );
	SPR_JUBKAME_E = precache_model( "sprites/w_jubeikame_e.spr" );
	SPR_JUBKAME_T = precache_model( "sprites/w_jubeikame_t.spr" );
	
	SPR_YELLOW_S = precache_model( "sprites/w_gb_y_s.spr" );
	SPR_YELLOW_T = precache_model( "sprites/w_gb_y_t.spr" );
	
}
public @BaseWeaponCreation ( Client, BaseWeapon, const Name[] )
{
	if ( equal( Name, "weapon_bigbang" ) && getClientLEVEL( Client ) > 0 )
	{
		setBeamChargeTime( BaseWeapon, 15 );
		setBeamChargeKi( BaseWeapon, 25 );
		setBeamSpeed( BaseWeapon, 20 );
	}

	if ( equal( Name, "weapon_kamehameha" ) && getClientLEVEL(Client) > 1 )
	{
		setBeamChargeTime( BaseWeapon, 40 );
		setBeamChargeKi( BaseWeapon, 15 );
		//setBeamSpeed( BaseWeapon, 200 );
	}
	if ( equal( Name, "weapon_finalflash" ) && getClientLEVEL(Client) > 1 )
	{
		setBeamChargeTime( BaseWeapon, 25 );
		setBeamChargeKi( BaseWeapon, 28 );
		setBeamSpeed( BaseWeapon, 850 );
	}

}

public @IconUpdate ( Client, Level )
{
	replaceClientICON( Client, C_ICON_BIGBANG, ICON_BIGBANG );
}

public @WeaponAdjust ( Client, Weapon, const Class[] )
{
	/**
	 0 - Blue
	 1 - Green
	 2 - Orange
	 3 - Purple
	 4 - Yellow
	 5 - Red
	 6 - White
	 7 - None
	**/

	
	if ( equal( Class, "greenattack" ) && getClientLEVEL(Client) == 0 )
	{	
		setWeaponXPC( 0 );
		setWeaponXPM( 7.5 );
	}
	if ( equal( Class, "greenattack" ) && getClientLEVEL(Client) == 1 )
	{	
		setWeaponXPC( 4 );
		setWeaponXPM( 7.5 );
	}
	if ( equal( Class, "greenattack" ) && getClientLEVEL(Client) == 2 )
	{	
		setWeaponXPC( 4 );
		setWeaponXPM( 7.5 );
	}
	if ( equal( Class, "greenattack" ) && getClientLEVEL(Client) >= 3 )
	{	
		setWeaponXPC( 4 );
		setWeaponXPM( 7.5 );
	}
	
		

	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 1 )
	{
		setWeaponXPM( 6.0 );
		setWeaponXPC( 0 );
		setWeaponDMG( 11.0, 110.0, 0.40 );
		message_begin	( MSG_BROADCAST, SVC_TEMPENTITY );
		write_byte		( TE_BEAMFOLLOW );
		write_short		( Weapon );
		write_short		( SPR_BIGBANG_T );
		write_byte		( 10 );
		write_byte		( 20 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		message_end		();
		
		setWeaponHOMING( Weapon, 320.0, 1 /* @ Aim Vec */, 1 | 2 /* Players + Weapons*/ );

	}
	else if ( equal( Class, "finalflash" ) && getClientLEVEL( Client ) == 3 )
	{
		setWeaponXPC( 5 );
		setWeaponXPM( 25.0 );
		// Super Kamehameha
		setWeaponDMG( 25.0, 250.0, 0.08 );
	}
	else if ( equal( Class, "finalflash" ) && getClientLEVEL( Client ) == 2 )
	{
		setWeaponXPC( 4 );
		setWeaponXPM( 17.0 );
		// Super Kamehameha
		setWeaponDMG( 10.0, 100.0, 0.08 );
	}
	else if ( equal( Class, "finalflash" ) && getClientLEVEL( Client ) == 1 )
	{
		setWeaponXPC( 4 );
		setWeaponXPM( 13.0 );
		// Super Kamehameha
		setWeaponDMG( 12.0, 120.0, 0.08 );
	}
	else if ( equal( Class, "finalflash" ) && getClientLEVEL( Client ) == 0 )
	{
		setWeaponXPC( 4 );
		setWeaponXPM( 13.0 );
		// Super Kamehameha
		setWeaponDMG( 12.0, 120.0, 0.08 );
	}
	else if ( equal( Class, "bigbang" ) && getClientLEVEL( Client ) == 1 )
	{
		setWeaponXPC( 0 );
		setWeaponXPM( 8.0 );
		// Super Kamehameha
		setWeaponDMG( 13.0, 130.0, 0.07 );
	}
	else if ( equal( Class, "bigbang" ) && getClientLEVEL( Client ) == 0 )
	{
		setWeaponXPC( 0 );
		setWeaponXPM( 8.0 );
		// Super Kamehameha
		setWeaponDMG( 13.0, 130.0, 0.07 );
	}
	else if ( equal( Class, "bigbang" ) && getClientLEVEL( Client ) == 2)
	{
		setWeaponXPC( 2 );
		setWeaponXPM( 12.0 );
		// Super Kamehameha
		setWeaponDMG( 18.0, 150.0, 0.07 );
	}
	else if ( equal( Class, "bigbang" ) && getClientLEVEL( Client ) >= 3 )
	{
		setWeaponXPC( 0 );
		setWeaponXPM( 30.0 );
		// Super Kamehameha
		setWeaponDMG( 60.0, 400.0, 0.07 );
	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 2 )
	{
		setWeaponXPM( 14.0 );
		setWeaponXPC( 0 );
		setWeaponDMG( 17.0, 130.0, 0.40 );
		message_begin	( MSG_BROADCAST, SVC_TEMPENTITY );
		write_byte		( TE_BEAMFOLLOW );
		write_short		( Weapon );
		write_short		( SPR_BIGBANG_T );
		write_byte		( 10 );
		write_byte		( 20 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		message_end		();
		
		setWeaponHOMING( Weapon, 450.0, 1 /* @ Aim Vec */, 1 | 2 /* Players + Weapons*/ );

	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 3 )
	{
		setWeaponXPM( 25.0 );
		setWeaponXPC( 0 );
		setWeaponDMG( 22.0, 200.0, 0.40 );
		message_begin	( MSG_BROADCAST, SVC_TEMPENTITY );
		write_byte		( TE_BEAMFOLLOW );
		write_short		( Weapon );
		write_short		( SPR_BIGBANG_T );
		write_byte		( 10 );
		write_byte		( 20 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		message_end		();
		
		setWeaponHOMING( Weapon, 550.0, 1 /* @ Aim Vec */, 1 | 2 /* Players + Weapons*/ );

	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 4 )
	{
		setWeaponXPM( 25.0 );
		setWeaponXPC( 0 );
		setWeaponDMG( 30.0, 200.0, 0.40 );
		message_begin	( MSG_BROADCAST, SVC_TEMPENTITY );
		write_byte		( TE_BEAMFOLLOW );
		write_short		( Weapon );
		write_short		( SPR_BIGBANG_T );
		write_byte		( 10 );
		write_byte		( 20 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		message_end		();
		
		setWeaponHOMING( Weapon, 550.0, 1 /* @ Aim Vec */, 1 | 2 /* Players + Weapons*/ );

	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 5 )
	{
		setWeaponXPM( 14.0 );
		setWeaponXPC( 0 );
		setWeaponDMG( 17.0, 130.0, 0.40 );
		message_begin	( MSG_BROADCAST, SVC_TEMPENTITY );
		write_byte		( TE_BEAMFOLLOW );
		write_short		( Weapon );
		write_short		( SPR_BIGBANG_T );
		write_byte		( 10 );
		write_byte		( 20 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		message_end		();
		
		setWeaponHOMING( Weapon, 450.0, 1 /* @ Aim Vec */, 1 | 2 /* Players + Weapons*/ );

	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 6 )
	{
		setWeaponXPC( 0 );
		setWeaponXPM( 49.0 );
		setWeaponDMG( 42.0, 540.0, 0.05 );
	}
	else if ( equal( Class, "kiblast" ) && getClientLEVEL( Client ) < 3 )
	{
		setWeaponXPM( 2.2 );
		setWeaponXPC( 4 );
		
		message_begin	( MSG_BROADCAST, SVC_TEMPENTITY );
		write_byte		( TE_BEAMFOLLOW );
		write_short		( Weapon );
		write_short		( SPR_BLUE_T );
		write_byte		( 9 );
		write_byte		( 5 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		message_end		();
		

	}
	else if ( equal( Class, "kiblast" ) && getClientLEVEL( Client ) >= 3 )
	{
		setWeaponXPM( 3.4 );
		setWeaponXPC( 5 );
		
		message_begin	( MSG_BROADCAST, SVC_TEMPENTITY );
		write_byte		( TE_BEAMFOLLOW );
		write_short		( Weapon );
		write_short		( SPR_JUBKAME_T );
		write_byte		( 9 );
		write_byte		( 7 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		message_end		();
		

	}
	
}

public @WeaponBeam ( Client, Weapon, const Class[], Size )
{
	/**
	 1 -  LONG - Client ???				- do not edit
	 2 -  LONG - Weapon					- do not edit
	 3 -  BYTE - Client ???				- do not edit
	 4 - SHORT - Head Start A
	 5 - SHORT - Head Start B
	 6 - SHORT - Head End A
	 7 - SHORT - Head End B
	 8 - SHORT - Trail
	 9 -  BYTE - Size
	10 -  BYTE - Segement Length ???
	11 - COORD - X						- do not edit
	12 - COORD - Y						- do not edit
	13 - COORD - Z						- do not edit
	**/

	if ( equal( Class, "greenattack" ) && getClientLEVEL(Client) >= 1 )
	{
		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_YELLOW_S );
		set_msg_arg_int( 6, ARG_SHORT, SPR_YELLOW_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_YELLOW_S );
		set_msg_arg_int( 8, ARG_SHORT, SPR_YELLOW_T );
	}
	else if ( equal( Class, "greenattack" ) )
	{
		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 8, ARG_SHORT, SPR_BLUE_T );
	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 1 )
	{
		

		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 7, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 8, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 9, ARG_BYTE, 10 );
	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 2 )
	{
		

		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 7, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 8, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 9, ARG_BYTE, 12 );
	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 3 )
	{
		

		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK  );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 7, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 8, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 9, ARG_BYTE, 20 );
	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 4 )
	{
		

		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK  );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 7, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 8, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 9, ARG_BYTE, 20 );
	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 5 )
	{
		

		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK  );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 7, ARG_SHORT, SPR_BIGBANGKAME );
		set_msg_arg_int( 8, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 9, ARG_BYTE, 20 );
	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL( Client ) == 6 )
	{
		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_SUKAME_E );
		set_msg_arg_int( 8, ARG_SHORT, SPR_SUKAME_T );
		set_msg_arg_int( 9, ARG_BYTE, 42 );
	}
	if ( equal( Class, "kiblast" ) && getClientLEVEL( Client ) < 3 )
	{
		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 8, ARG_SHORT, SPR_BLACK);

		set_msg_arg_int( 9, ARG_BYTE, 4 );

	}

	if ( equal( Class, "kiblast" ) && getClientLEVEL( Client ) >= 3 )
	{
		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 6, ARG_SHORT, SPR_JUBKAME_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_JUBKAME_S );
		set_msg_arg_int( 8, ARG_SHORT, SPR_BLACK);

		set_msg_arg_int( 9, ARG_BYTE, 6 );

	}

}

public @WeaponBlast ( Client, Weapon, const Class[], Size )
{
	/**
	 1 -  LONG - Entity  - do not edit
	 2 - SHORT - Head A
	 3 - SHORT - Head B
	 4 - SHORT - Size
	 5 - SHORT - Trail A
	 6 - SHORT - Trail B
	 7 - COORD - X		- do not edit
	 8 - COORD - Y		- do not edit
	 9 - COORD - Z		- do not edit
	**/

	if ( equal( Class, "greenattack" ) && getClientLEVEL( Client ) > 0 )
	{
		set_msg_arg_int( 2, ARG_SHORT, SPR_YELLOW_S );
		set_msg_arg_int( 3, ARG_SHORT, SPR_YELLOW_S );
		set_msg_arg_int( 5, ARG_SHORT, SPR_YELLOW_T );
		set_msg_arg_int( 6, ARG_SHORT, SPR_YELLOW_T );
	}

	else if ( equal( Class, "greenattack" ) && getClientLEVEL( Client ) == 0 )
	{
		set_msg_arg_int( 2, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 3, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLUE_T );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BLUE_T );
	}

	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 1 )
	{
		attachWeaponHEAD( Weapon, "sprites/w_bigbang.spr", kRenderTransAdd, 250.0, 1.0, 10.0 );

		set_msg_arg_int( 2, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 3, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 4, ARG_SHORT, 11 );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BLACK );
	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) == 2 )
	{
		attachWeaponHEAD( Weapon, "sprites/w_bigbang.spr", kRenderTransAdd, 250.0, 1.0, 10.0 );

		set_msg_arg_int( 2, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 3, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 4, ARG_SHORT, 18 );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BLACK );
	}
	else if ( equal( Class, "kamehameha" ) && getClientLEVEL(Client) >= 3 )
	{
		attachWeaponHEAD( Weapon, "sprites/w_bigbang.spr.spr", kRenderTransAdd, 250.0, 1.0, 10.0 );

		set_msg_arg_int( 2, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 3, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 4, ARG_SHORT, 22 );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLACK );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BLACK );
	}
	if ( equal( Class, "kiblast" ) && getClientLEVEL( Client ) < 3)
	{
		set_msg_arg_int( 2, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 3, ARG_SHORT, SPR_BLUE_S );
		set_msg_arg_int( 5, ARG_SHORT, SPR_BLUE_T );
		set_msg_arg_int( 6, ARG_SHORT, SPR_BLUE_T );
		set_msg_arg_int( 4, ARG_SHORT, 4 );
	}
	if ( equal( Class, "kiblast" ) && getClientLEVEL( Client ) >= 3 )
	{
		set_msg_arg_int( 2, ARG_SHORT, SPR_JUBKAME_S );
		set_msg_arg_int( 3, ARG_SHORT, SPR_JUBKAME_S );
		set_msg_arg_int( 5, ARG_SHORT, SPR_JUBKAME_T );
		set_msg_arg_int( 6, ARG_SHORT, SPR_JUBKAME_T );
		set_msg_arg_int( 4, ARG_SHORT, 6 );
	}
	if ( equal( Class, "bigbang" ) && getClientLEVEL( Client ) >= 0 )
	{
		set_msg_arg_int( 9, ARG_BYTE, 20 );
	}


}

public @WeaponDeath ( Client, Killer, const Weapon[] )
{
	/**
	 1 -   BYTE - Killer - do not edit
	 2 -   BYTE - Client - do not edit
	 3 - STRING - Weapon
	**/


	if ( equal( Weapon, "greenattack" ) && getClientLEVEL( Killer ) == 0 )
	{		
		set_msg_arg_string( 3, "blueattack" );
	}
	else if ( equal( Weapon, "kamehameha" ) && getClientLEVEL( Killer ) == 1 )
	{
		set_msg_arg_string( 3, "Big Bang Kamehameha" );
	}
	else if ( equal( Weapon, "kamehameha" ) && getClientLEVEL( Killer ) == 2 )
	{
		set_msg_arg_string( 3, "Super Big Bang Kamehameha" );
	}
	else if ( equal( Weapon, "kamehameha" ) && getClientLEVEL( Killer ) == 3 )
	{
		set_msg_arg_string( 3, "10x Big Bang Kamehameha" );
	}
	else if ( equal( Weapon, "kamehameha" ) && getClientLEVEL( Killer ) == 4 )
	{
		set_msg_arg_string( 3, "Big Bang Kamehameha" );
	}
	else if ( equal( Weapon, "kamehameha" ) && getClientLEVEL( Killer ) == 5 )
	{
		set_msg_arg_string( 3, "100x Big Bang Kamehameha" );
	}
	else if ( equal( Weapon, "kamehameha" ) && getClientLEVEL( Killer ) == 6 )
	{
		set_msg_arg_string( 3, "BIG DICK Kamehameha" );
	}
}