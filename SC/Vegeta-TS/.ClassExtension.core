/*
** << Evolution Class Extension >>
**
** 	Copyright (C) 2005 - 2007 Corona Bytes .NET
**
** This program is free software; you can redistribute it and/or
** modify it under the terms of the GNU General Public License
** as published by the Free Software Foundation; either version 2
** of the License, or (at your option) any later version.
**
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
**
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software
** Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/

new const CX_Plugin[]	= 	"ecx.vegeta-ts";
new const CX_Version[]	=	"1337";
new const CX_Author[]	=	"BANDIT/C4";

#define MOD_SOUND 	1
#define MOD_CHARGE 	1
#define MOD_WEAPON	1


#include < amxx/amxmodx >
#include < amxx/engine >
#include <fakemeta>
#include <ipci/ascend>
#include <ipci/Fxlib>
#include <engine>
#include <ipci/Core>
#include <fun>
#include < hamsandwich >
#include <amxmodx>
#include <amxmisc>
#include <amxx/fakemeta_util>
#include <ipci/ascend>
#include <ipci/Fxlib>

// << Implement CX Interface >>
#include <xtension/class/main>

// instatrans vars
new bool:delay[32];
new bool:ssjtrans[32];
new bool:ssj4dabest[32];
new bool:ssj3dabest[32];
new bool:Mafubawish[32];

PluginInit ()
{
	register_plugin( CX_Plugin, CX_Version, CX_Author );
	
	// register forward for fast ascend to blue
	register_forward( FM_ClientCommand,"FastAscend");
	
	register_clcmd("say ssj4lock", "ssj4lock");
	register_clcmd("say ssj3trans", "ssj3rocks");

}


public ssj4oozaruglow(id)
{
	emit_sound( id, CHAN_ITEM, "oozaru/oozaruscream.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
	setClientMODEL( id, "transgoozarufinal" );
	setClientANIMATION(id, 1, 0.0);
	set_user_rendering(id, kRenderFxGlowShell, 255, 155, 0, kRenderTransColor, 45)
	
	set_pev( id, pev_fixangle, true );
	client_cmd( id, "resetview" );
	client_cmd( id, "cam_idealyaw 180" );
	client_cmd( id, "cam_idealdist 200" );
	
	set_task(2.0, "ssj4oozaruglow2",id);
}

public ssj4oozaruglow2(id)
{
	set_user_rendering(id,kRenderFxGlowShell,0,0,0,kRenderNormal,45)
	
	// instblue setClientDATAc( Client, cliLevel, __int_Level );
	setClientMODEL( id, "ecx.vegeta-ts.ssj4" );
	
	setClientANIMATION(id, -1 ,1.0);
	client_cmd( id, "resetview" );
	client_cmd( id, "turbo" );
}



public FastAscend( id )
{
	new cmd[8];
	read_argv(0,cmd,7);
	new currentPowerlevel = 0;

	if( !equali( cmd, "ascend" ) )
		return PLUGIN_CONTINUE;
	
	currentPowerlevel = get_pdata_int(id, 460);
	
	if(ssjtrans[id] && getClientLEVEL( id ) == 1 && currentPowerlevel >= 3000000 && currentPowerlevel <= 3499999 && getClientCLASS( id ) == getCXbyName( "Vegeta:Training Suit" ))
	{
		if (delay[id])
		{
			// instblue setClientDATAc( Client, cliLevel, __int_Level );
			@ClassInitiateTransformation ( id, 2, true )
			setClientPL( id, currentPowerlevel*2 );
			setClientMODEL( id, "ecx.vegeta-ts.ssj2" );
			setClientDATAc( id, cliLevel, 2 );  
			delay[id] = false;
		}
		else
		{
			delay[id] = true;
		}
		
		return PLUGIN_HANDLED;
	
	}
	if(ssjtrans[id] && getClientLEVEL( id ) == 1 && currentPowerlevel >= 3500000 && currentPowerlevel <= 4399999 && getClientCLASS( id ) == getCXbyName( "Vegeta:Training Suit" ))
	{
		if (delay[id])
		{
			if(ssj3dabest[id])
			{
				setClientMODEL( id, "ecx.vegeta-ts.ssjmajin" );
			}
			else
			{
				setClientMODEL( id, "ecx.vegeta-ts.majin" );
			}
			
			// instblue setClientDATAc( Client, cliLevel, __int_Level );
			@ClassInitiateTransformation ( id, 3, true )
			setClientPL( id, currentPowerlevel*4 );
			//setClientMODEL( id, "ecx.vegeta-ts.majin" );
			setClientDATAc( id, cliLevel, 3 );  
			delay[id] = false;
		}
		else
		{
			delay[id] = true;
		}
		
		return PLUGIN_HANDLED;
	
	}
	if(ssjtrans[id] && getClientLEVEL( id ) == 1 && currentPowerlevel >= 4400000 && currentPowerlevel <= 6099999 && getClientCLASS( id ) == getCXbyName( "Vegeta:Training Suit" ))
	{
		if (delay[id])
		{
			// instblue setClientDATAc( Client, cliLevel, __int_Level );
			@ClassInitiateTransformation ( id, 4, true )
			setClientPL( id, currentPowerlevel*8 );
			//setClientMODEL( id, "ecx.vegeta-ts.ssj4" );
			setClientDATAc( id, cliLevel, 4 );  
			delay[id] = false;
		}
		else
		{
			delay[id] = true;
		}
		
		return PLUGIN_HANDLED;
	
	}
	if(ssjtrans[id] && getClientLEVEL( id ) == 1 && currentPowerlevel >= 6100000 && getClientCLASS( id ) == getCXbyName( "Vegeta:Training Suit" ))
	{
		if (delay[id])
		{
			if(ssj4dabest[id])
			{
				//ssj4oozaruglow(id);
				
				// instblue setClientDATAc( Client, cliLevel, __int_Level );
				@ClassInitiateTransformation ( id, 4, true )
				setClientPL( id, currentPowerlevel*8 );
				//setClientMODEL( id, "ecx.vegeta-ts.ssj4" );
				setClientDATAc( id, cliLevel, 4 );  
				delay[id] = false;
			}
			else
			{
			
				// instblue setClientDATAc( Client, cliLevel, __int_Level );
				@ClassInitiateTransformation ( id, 5, true )
				emit_sound( id, CHAN_ITEM, "ecx.vegeta-ts/t_majinend.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				AddFx( id, "fxBlow" );
				AddFx( id, "fxSpriteRays", "sprites/ecx.lightning.spr", 8, 20, 50, 255, 100, 40, 150, 200, 650, 0, 22 );
				AddFx( id, "fxScreenShake", 50.0, 3.0, 4.0 );
				AddFx( id, "fxPowerWave", "sprites/white.spr", 180, 145, 120, 30, 250 );AddFx( id, "fxBlow" );
				AddFx( id, "fxPowerWave", "sprites/white.spr", 180, 145, 120, 30, 250 );AddFx( id, "fxBlow" );
				AddFx( id, "fxPowerWave", "sprites/white.spr", 180, 145, 120, 30, 250 );
				AddFx( id, "fxPowerup", 0, 0, 0 );
				AddFx( id, "fxSprite", "sprites/lightninghit.spr", 100, 255, 0, 0, 0 );
				AddFx( id, "fxLgtField", 0.2, 3, 255, 100);
				AddFx( id, "fxSprite", "sprites/ywaves.spr", 6, 60, 0, 0, 0 );
				AddFx( id, "fxPowerWave", "sprites/white.spr", 180, 145, 120, 90, 250);
				AddFx( id, "fxModelEntity", "models/evolution/ssj4trans1.mdl", 0, 0, 20.0, 0, 0, 0, 2.0, 3.0, 0, 0 );
				AddFx( id, "fxModelEntity", "models/evolution/Auras/godblue.mdl", 0, 0, 50.0, 0, 0, 0, 2.0, 1.3, 0, 3 );
				setClientPL( id, currentPowerlevel*12 );
				setClientMODEL( id, "ecx.vegeta-ts.ssb" );
				setClientDATAc( id, cliLevel, 5 );  
				delay[id] = false;
			}
		}
		
		else
		{
			delay[id] = true;
		}
		
		return PLUGIN_HANDLED;
	}
	
	return PLUGIN_CONTINUE;
}

public ssj4lock(id)
{
	if(ssj4dabest[id])
	{
		client_print(id, print_chat, "SSJ4 Lock disabled");
		ssj4dabest[id] = false;
	}
	else
	{
		client_print(id, print_chat, "SSJ4 Lock enabled");
		ssj4dabest[id] = true;
	}
}

public ssj3rocks(id)
{
	if(ssj3dabest[id])
	{
		client_print(id, print_chat, "SSJ3 forgotten");
		ssj3dabest[id] = false;
	}
	else
	{
		client_print(id, print_chat, "SSJ3 learned");
		ssj3dabest[id] = true;
	}
}

public @ClassCreation ()
{
	createClass( { MOD_SOUND, MOD_CHARGE, MOD_WEAPON },
				"Vegeta:Training Suit", true, false, "", "sound/ecx.vegeta-ts/c_intro.wav");

	// Saiya-jin
	addClassLevel( "Saiya-jin", "ecx.vegeta-ts", 5.5, 1.5, 1200000, 1200000, 2.0, 
					250, 110, bool:{ false, false }, 1.0, { 350, 150 }, { 0, 0, 0, 0, 0, 0, 0 }, 2.0, Float:{ 100.0, 0.0 } );
	addClassEffect( "models/evolution/Auras/shape_01.mdl", Float:{ 255.0, 255.0, 255.0, 50.0 }, 0, kRenderTransAdd,
					{ 255, 255, 255 }, { 0, 0, 0, 0 }, Float:{ 0.0, 0.0, 0.0, 0.0 } );

	// Super Saiya-jin
	addClassLevel( "Super Saiya-jin", "ecx.vegeta-ts.ssj", 56.0, 2.0, 2000000, 2200000, 2.0, 
					280, 145, bool:{ false, false }, 4.0, { 400, 100 }, { 0, 0, 0, 0, 0, 1, 0 }, 4.0, Float:{ 110.0, 10.0 } );
	addClassEffect( "models/evolution/Auras/shape_01.mdl", Float:{ 255.0, 255.0, 128.0, 50.0 }, 4, kRenderTransAdd,
					{ 255, 255, 128 }, { 0, 0, 0, 0 }, Float:{ 0.0, 0.0, 0.0, 0.0 } );

	// Super Saiya-jin II
	addClassLevel( "Super Saiya-jin II", "ecx.vegeta-ts.ssj2", 23.0, 1.5, 5000000, 6000000, 2.0, 
					300, 160, bool:{ false, false }, 10.0, { 500, 100 }, { 0, 0, 1, 0, 0, 2, 2 }, 5.0, Float:{ 120.0, 20.0 } );
	addClassEffect( "models/evolution/Auras/shape_06.mdl", Float:{ 255.0, 255.0, 128.0, 50.0 }, 4, kRenderTransAdd,
					{ 255, 255, 128 }, { 1, 1, 1, 7 }, Float:{ 0.0, 0.0, 0.0, 0.0 } );

	// Majin Vegeta
	addClassLevel( "Majin Vegeta", "ecx.vegeta-ts.majin", 23.0, 1.5, 13000000, 14000000, 2.0, 
					330, 180, bool:{ false, false }, 11.0, { 550, 120 }, { 0, 1, 1, 0, 1, 2, 3 }, 6.0, Float:{ 131.0, 30.0 } );
	addClassEffect( "models/evolution/Auras/shape_06.mdl", Float:{ 160.0, 150.0, 20.0, 50.0 }, 4, kRenderTransAdd,
					{ 160, 150, 70 }, { 1, 1, 1, 7 }, Float:{ 0.0, 0.0, 0.0, 0.0 } );

	// Super Saiya-jin IV
	addClassLevel( "Super Saiya-jin IV", "ecx.vegeta-ts.ssj4", 23.0, 6.0, 33000000, 35000000, 1.5, 
					480, 220, bool:{ false, false }, 12.0, { 650, 75 }, { 1, 1, 1, 1, 1, 3, 4 }, 8.0, Float:{ 165.0, 51.0 } );
	addClassEffect( "models/evolution/Auras/shape_C.mdl", Float:{ 160.0, 150.0, 20.0, 50.0 }, 4, kRenderTransAdd,
					{ 160, 150, 70 }, { 1, 1, 1, 7 }, Float:{ 0.0, 0.0, 0.0, 0.0 } );
					
	// Super Saiya-jin Blue
	addClassLevel( "Super Saiya-jin Blue", "ecx.vegeta-ts.ssb", 6.0, 6.0, 70000000, 73200000, 1.5, 
					620, 255, bool:{ true, false }, 15.0, { 700, 80 }, { 1, 1, 1, 1, 1, 4, 4 }, 9.0, Float:{ 208.0, 62.0 } );
	addClassEffect( "models/evolution/Auras/aurablau.mdl", Float:{ 0.0, 255.0, 255.0, 50.0 }, 5, kRenderTransAdd,
					{ 0, 255, 255 }, { 0, 0, 0, 0 }, Float:{ 0.0, 0.0, 0.0, 0.0 } );
}


public @ClassWeaponUpdate ( Client, Level )
{
	switch ( Level )
	{
		case 0: // Saiya-jin
		{
			addClassItem( Client, "weapon_melee", true );
			addClassItem( Client, "weapon_renzoku" );
			addClassItem( Client, "weapon_kiblast" );
			addClassItem( Client, "weapon_gallitgun" );
			addClassItem( Client, "weapon_genericbeam" );
			addClassItem( Client, "weapon_sensu" );
			
			setClientMODEL( Client, "ecx.vegeta-ts" );
			
			if(Mafubawish[Client])
				{
					addClassSpecial( Client, "mafuba" );
				}
		}
		case 1: // Super Saiya-jin
		{
			addClassItem( Client, "weapon_melee", true );
			addClassItem( Client, "weapon_renzoku" );
			addClassItem( Client, "weapon_kiblast" );
			addClassItem( Client, "weapon_gallitgun" );
			addClassItem( Client, "weapon_genericbeam" );
			addClassItem( Client, "weapon_bigbang" );
			addClassItem( Client, "weapon_finalflash" );
			addClassItem( Client, "weapon_sensu" );
		}
		case 2: // Super Saiya-jin II
		{
			addClassItem( Client, "weapon_melee", true );
			addClassItem( Client, "weapon_renzoku" );
			addClassItem( Client, "weapon_kiblast" );
			addClassItem( Client, "weapon_finalflash" );
			addClassItem( Client, "weapon_gallitgun" );
			addClassItem( Client, "weapon_genericbeam" );
			addClassItem( Client, "weapon_bigbang" );
			addClassItem( Client, "weapon_sensu" );
		}
		case 3: // Majin Vegeta
		{
			addClassItem( Client, "weapon_melee", true );
			addClassItem( Client, "weapon_renzoku" );
			addClassItem( Client, "weapon_kiblast" );
			addClassItem( Client, "weapon_finalflash" );
			addClassItem( Client, "weapon_gallitgun" );
			addClassItem( Client, "weapon_genericbeam" );
			addClassItem( Client, "weapon_bigbang" );
			addClassSpecial( Client, "UltimateSacrifice" );
			addClassItem( Client, "weapon_sensu" );
			
			if(ssj3dabest[Client])
			{
				setClientMODEL( Client, "ecx.vegeta-ts.ssjmajin" );
			}
		}
		case 4: // Super Saiya-jin IV
		{
			addClassItem( Client, "weapon_melee", true );
			addClassItem( Client, "weapon_renzoku" );
			addClassItem( Client, "weapon_kiblast" );
			addClassItem( Client, "weapon_finalflash" );
			addClassItem( Client, "weapon_gallitgun" );
			addClassItem( Client, "weapon_kamehameha" );
			addClassItem( Client, "weapon_genericbeam" );
			addClassItem( Client, "weapon_bigbang" );
			addClassItem( Client, "weapon_sensu" );
		}
		case 5: // Super Saiya-jin Blue
		{
			addClassItem( Client, "weapon_melee", true );
			addClassItem( Client, "weapon_renzoku" );
			addClassItem( Client, "weapon_kiblast" );
			addClassItem( Client, "weapon_finalflash" );
			addClassItem( Client, "weapon_gallitgun" );
			addClassItem( Client, "weapon_kamehameha" );
			addClassItem( Client, "weapon_genericbeam" );
			addClassItem( Client, "weapon_bigbang" );
			addClassItem( Client, "weapon_sensu" );
			addClassSpecial( Client, "UltimateSacrifice" );
		}
	}
}

PluginPreCache ()
{
	precache_model( "models/player/ecx.vegeta-ts/ecx.vegeta-ts.mdl" );
	precache_model( "models/player/ecx.vegeta-ts.ssj/ecx.vegeta-ts.ssj.mdl" );
	precache_model( "models/player/ecx.vegeta-ts.ssj2/ecx.vegeta-ts.ssj2.mdl" );
	precache_model( "models/player/ecx.vegeta-ts.majin/ecx.vegeta-ts.majin.mdl" );
	precache_model( "models/player/ecx.vegeta-ts.ssjmajin/ecx.vegeta-ts.ssjmajin.mdl" );
	precache_model( "models/player/ecx.vegeta-ts.ssj4/ecx.vegeta-ts.ssj4.mdl" );
	precache_model( "models/player/ecx.vegeta-ts.ssb/ecx.vegeta-ts.ssb.mdl" );
	
	
	precache_model( "sprites/waves.spr" );
	precache_model( "sprites/ywaves.spr" );

	precache_model( "models/evolution/Machine.mdl" );
	precache_model( "models/evolution/Auras/shape_01.mdl" );
	precache_model( "models/evolution/Auras/shape_06.mdl" );
	precache_model( "models/evolution/Auras/shape_02.mdl" );
	precache_model( "models/evolution/Auras/shape_C.mdl" );
	precache_model( "models/evolution/Auras/Electircity.mdl" );
	precache_model( "models/evolution/Auras/Electircity2.mdl" );
	precache_model( "models/evolution/Auras/shape_05.mdl" );
	precache_model( "models/evolution/Auras/aurablau.mdl" );
	precache_model( "models/evolution/redmaura2.mdl" );
	precache_model( "models/player/transoozarufinal/transoozarufinal.mdl" );
	precache_model( "models/player/transgoozarufinal/transgoozarufinal.mdl" );
	precache_model( "sprites/vegetassj4trans.spr" );
	precache_model( "sprites/vegetassj4aura.spr" );
	precache_model( "sprites/ecx.aura.ssj4.spr" );
	
	precache_sound( "ecx.vegeta-ts/t_ssjLONG.wav" );
	precache_sound( "ecx.vegeta-ts/t_ssj4.wav" );
	precache_sound( "ecx.vegeta-ts/t_ssj4end.wav" );
	precache_sound( "ecx.vegeta-ts/t_ssj.wav" );
	precache_sound( "ecx.vegeta-ts/t_ssj2.wav" );
	precache_sound( "ecx.vegeta-ts/t_majin.wav" );
	precache_sound( "ecx.vegeta-ts/tp_ssj2.wav" );
	precache_sound( "ecx.vegeta-ts/tp_ssj.wav" );
	precache_sound( "oozaru/oozaruscream.wav" );
	precache_sound( "ecx.vegeta-ts/t_majinend.wav" );
	
}


public @ClassInitiateTransformation ( Client, Level, bool:Perfect )
{
	new CORE[ 1 ];
	CORE[ 0 ] = Client;
	if ( Perfect )
	{
		switch ( Level )
		{
			case 1:
			{	
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				ssjtrans[Client] = true;
				emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/tp_ssj.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				AddFx( Client, "fxAvatar", "create", 102, 1.0 );
				set_task( 0.0, "fxAura", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
			}
			case 2:
			{	
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/tp_ssj2.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				AddFx( Client, "fxAvatar", "create", 102, 1.0 );
				set_task( 0.0, "fxAura", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
			}
			case 3:
			{	
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/tp_ssj2.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				AddFx( Client, "fxAvatar", "create", 100, 1.5 );
				set_task( 0.0, "fxAura", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "fxAura7", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
			}
			case 4:
			{
				ssj4oozaruglow(Client);
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				//emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/t_ssj4end.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				//AddFx( Client, "fxAvatar", "create", 101, 0.4 );
				set_task( 0.0, "fxAura18", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.5, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.5, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.5, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.5, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.5, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 5.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 5.5, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 6.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
			}
			case 5:
			{
				emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/tp_ssj2.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				set_task( 0.0, "fxAura", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "ModelChangeblau", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				//setClientANIMATION(Client,102,0.5);
				setClientHiddenPOWERUP( Client, true );
				set_task( 0.0, "fxblau", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.1, "fxAura15", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",2 );
				set_task( 0.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
				setClientHiddenPOWERUP( Client, true );
				set_task( 0.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.1, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "ModelChangeblau2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 1.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 5.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.2, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 1.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlowSpecial", uniqueTaskID( Client,100 ), CORE, 1, "a",2 );
				set_task( 0.2, "fxsphere", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxssj45", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxssj45", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 1.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxScream3333", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 2.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.7, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.5, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.6, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				}
		}
	}
	else
	{
		switch ( Level )
		{
			case 1:
			{
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/t_ssjLONG.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				setClientHiddenPOWERUP( Client, true );
				//setClientANIMATION(Client,102,0.2);
				set_task( 0.0, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.0, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 20.0, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 30.0, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.0, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 50.0, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "ModelChange1", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "ModelChange2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 9.0, "ModelChange3", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 15.0, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 13.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 15.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 19.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 21.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 23.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 25.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 27.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 29.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 31.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 33.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 35.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 37.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 39.2, "fxAura300", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 39.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 41.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 42.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 43.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 44.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 45.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 46.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 47.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 48.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 49.5, "fxAura301", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 24.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 24.1, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 24.3, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 24.6, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 24.8, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 27.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 27.1, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 27.3, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 27.6, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 27.8, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 35.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 34.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 35.1, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 35.0, "fxrocklift", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 35.0, "fxWhiteAura", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 35.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 35.1, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 35.3, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 35.6, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 35.8, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 38.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 38.1, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 38.3, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 38.6, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 38.8, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 39.5, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 39.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.0, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.0, "fxrocklift", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.0, "fxYellowAura", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 40.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.1, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.3, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.6, "ModelChange5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 40.8, "ModelChange4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 44.0, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 44.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 44.5, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 44.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 44.0, "fxrocklift", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				set_task( 49.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 49.0, "ModelChange6", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 49.0, "endpowerup", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 50.0, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 50.0, "fxYellowAura2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 51.0, "ModelChange7", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 53.0, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 53.0, "fxYellowAura3", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 56.0, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
			}
			case 2:
			{
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/t_ssj2.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				setClientHiddenPOWERUP( Client, true );
				AddFx( Client, "fxAvatar", "create", 101, 1.0 );
				set_task( 0.0, "fxAura3", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 8.1, "fxAura15", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 7.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",2 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 13.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
			}

			case 3:
			{
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/t_majin.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				setClientHiddenPOWERUP( Client, true );
				AddFx( Client, "fxAvatar", "create", 100, 0.45 );
				set_task( 0.0, "fxAura7", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=0.0; i<=20.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 22.9, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
			}
			case 4:
			{	
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				set_task( 0.0, "ModelChange1", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/t_ssj4.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				setClientHiddenPOWERUP( Client, true );
				set_task( 2.0, "ModelChange11", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "fxAura5", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 5.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 6.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 7.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 8.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 9.0, "fxTarus", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 9.2, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",8 );
				set_task( 9.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",8 );
				set_task( 9.8, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",8 );
				set_task( 9.9, "fxFinalBlow3", uniqueTaskID( Client,100 ), CORE, 1, "a",4 );
				set_task( 10.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",8 );
				set_task( 10.1, "fxAura133", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.1, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.1, "fxAura40", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.3, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.3, "fxAura42", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.5, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.5, "fxAura44", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.7, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.7, "fxAura46", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.9, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.9, "fxAura24", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 13.0, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 13.0, "fxAura22", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 13.0, "fxAura21", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 16.0, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 16.0, "fxAura32", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 16.3, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 16.3, "fxAura33", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 16.6, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 16.6, "fxAura34", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 16.9, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 16.9, "fxAura35", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.2, "fxAura134", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.2, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.2, "fxAura36", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.5, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.5, "fxAura37", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.9, "fxAura20", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.9, "fxAura38", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.2, "fxAura39", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 13.0, "OZF", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 14.0, "OZF", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				
				
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 17.8, "fxAura19", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=0.0; i<=60.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 19.1, "fxFinalBlow2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 19.6, "fxScream", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
			}
			case 5:
			{
				AddFx( Client, "fxPowerup", 0, 0, 0 );
				emit_sound( Client, CHAN_ITEM, "ecx.vegeta-ts/tp_ssj2.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				set_task( 0.0, "fxAura", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "ModelChangeblau", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				//setClientANIMATION(Client,102,0.5);
				setClientHiddenPOWERUP( Client, true );
				set_task( 0.0, "fxblau", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.1, "fxAura15", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",2 );
				set_task( 0.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
				setClientHiddenPOWERUP( Client, true );
				set_task( 0.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.1, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "ModelChangeblau2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 1.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 5.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.2, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 1.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlowSpecial", uniqueTaskID( Client,100 ), CORE, 1, "a",2 );
				set_task( 0.2, "fxsphere", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxssj45", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxssj45", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 1.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxScream3333", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 2.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.7, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.5, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.6, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				}
		}
	}
}

public @ClassFinishTransformation ( Client, Level )
{
	RemFx( Client, "fxAvatar", 0);
	AddFx( Client, "fxBlow" );
	FX_off(Client);
	remove_task( uniqueTaskID( Client, 100 ) );
	ssjtrans[Client] = false;
	delay[Client] = false;
	client_cmd( Client, "turbo" );

	if( Level == 5)
		AddFx( Client, "fxPowerup", 0, 255, 255 );
}

public @ClassCancelTransformation ( Client, Level )
{
	new CORE[ 1 ];
	CORE[ 0 ] = Client;
	
	
	ssjtrans[Client] = false;
	delay[Client] = false;
	
	RemFx( Client, "fxAvatar", 0);

	FX_off(Client);

	remove_task( uniqueTaskID( Client, 100 ) );
	
	if(getClientCLASS( Client ) == getCXbyName( "Vegeta:Training Suit" ) && ( getClientLEVEL( Client ) == 0 ) )
	{
		setClientMODEL( Client, "ecx.vegeta-ts" );
	}
	else if(getClientCLASS( Client ) == getCXbyName( "Vegeta:Training Suit" ) && ( getClientLEVEL( Client ) == 1 ) )
	{
		setClientMODEL( Client, "ecx.vegeta-ts.ssj" );
	}
	else if(getClientCLASS( Client ) == getCXbyName( "Vegeta:Training Suit" ) && ( getClientLEVEL( Client ) == 2 ) )
	{
		setClientMODEL( Client, "ecx.vegeta-ts.ssj2" );
	}
	else if(getClientCLASS( Client ) == getCXbyName( "Vegeta:Training Suit" ) && ( getClientLEVEL( Client ) == 3 ) )
	{
		if(ssj3dabest[Client])
		{
			setClientMODEL( Client, "ecx.vegeta-ts.ssjmajin" );
		}
		else
		{
			setClientMODEL( Client, "ecx.vegeta-ts.majin" );
		}
	}
	else if(getClientCLASS( Client ) == getCXbyName( "Vegeta:Training Suit" ) && ( getClientLEVEL( Client ) == 4 ) )
	{
		setClientMODEL( Client, "ecx.vegeta-ts.ssj4" );
	}

}