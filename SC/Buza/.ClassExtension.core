/*
** << Evolution Class Extension >>
**
** 	Copyright (C) 2005 - 2007 Corona Bytes .NET
**
** This program is free software; you can redistribute it and/or
** modify it under the terms of the GNU General Public License
** as published by the Free Software Foundation; either version 2
** of the License, or (at your option) any later version.
**
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
**
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software
** Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/


new const CX_Plugin[]	= 	"CX.Buza";
new const CX_Version[]	=	"1337";
new const CX_Author[]	=	"BANDIT";

#define MOD_SOUND 	1
#define MOD_CHARGE 	1
#define MOD_WEAPON	1

// << Implement CX Interface >>
#include <xtension/class/main>
PluginInit ()
	register_plugin( CX_Plugin, CX_Version, CX_Author );

#include <xtension/fusion>
public @FusionClassCreation ()
{
	addFusion (
		"Buu",
		"Frieza",
		FUSION_POTARA,
		{ 3, 4, 0 },
		5000000,
		3.0,
		Float:{ 1.0, 1.0, 83.0, 83.0 },
		Float:{ 90.0, 0.0, 0.0, 0.0 },
		80000000.0
		);

}

public @ClassCreation ()
{
	createClass( { MOD_SOUND, MOD_CHARGE, MOD_WEAPON },
				"Buza", false, true, "WTF Fusion", "sound/ecx.buu/c_intro.wav" );

	// Saiya-jin
	addClassLevel( "buza", "ecx.buuzer1", 20.0, 20.0, 4000000, 1000000000, 2.0, 
					440, 255, bool:{ false, false }, 5.0, { 300, 50 }, { 1, 0, 0, 0, 0, 0, 0 }, 2.0, Float:{ 100.0, 0.0 } );
	addClassEffect( "models/evolution/Auras/shape_01.mdl", Float:{ 255.0, 128.0, 255.0, 20.0 }, 2, kRenderTransAdd,
					{ 255, 128, 255 }, { 0, 0, 0, 0 }, Float:{ 0.0, 0.0, 0.0, 0.0 } );

	
}

public @ClassWeaponUpdate ( Client, Level )
{
	switch ( Level )
	{
		case 0: // buza
		{
			addClassItem( Client, "weapon_melee", true );
			addClassItem( Client, "weapon_renzoku" );
			addClassItem( Client, "weapon_genericbeam" );
			addClassItem( Client, "weapon_mouthblast" );
			addClassSpecial( Client, "Genocide" );
			addClassItem( Client, "weapon_regeneration" );

		}
	}
}

// << Class Extension PreCache >> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

PluginPreCache ()
{
	precache_model( "models/player/ecx.vegetto/ecx.vegetto.mdl" );
	precache_model( "models/player/ecx.vegetto.ssj/ecx.vegetto.ssj.mdl" );
	precache_model( "models/player/ecx.vegetto.ssj3/ecx.vegetto.ssj3.mdl" );
	precache_model( "models/player/ecx.vegetto.ssb/ecx.vegetto.ssb.mdl" );
	precache_model( "models/player/ecx.buuzer1/ecx.buuzer1.mdl" );

	precache_model( "models/evolution/Auras/default.mdl" );
	precache_model( "models/evolution/Auras/godblue.mdl" );
	precache_model( "models/evolution/Auras/shape_01.mdl" );
	precache_model( "models/evolution/Auras/shape_05.mdl" );
	precache_model( "models/evolution/Auras/shape_06.mdl" );
	precache_sound( "ecx.vegetto/t_ssj.wav" );
	precache_sound( "ecx.vegetto/t_scream.wav" );
	
}

// << Class Extension Transformation >> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

public @ClassInitiateTransformation ( Client, Level, bool:Perfect )
{
	new CORE[ 1 ];
	CORE[ 0 ] = Client;

	if ( Perfect )
	{
		switch ( Level )
		{
			case 1:
			{


			}

			case 2:
			{


			}

			case 3:
			{

			}

		}
	}

	else
	{
		switch ( Level )
		{
			case 1:
			{
				
				setClientHiddenPOWERUP( Client, true );
				AddFx( Client, "fxAvatar", "create", 101, 1.0 );
				//setClientANIMATION(Client,102,0.2);

				set_task( 0.0, "fxAura2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 10.0, "fxAura3", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.1, "fxAura4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 9.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 10.2, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );

				set_task( 2.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 2.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",5 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );

				set_task( 19.5, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );


			}

			case 2:
			{
				emit_sound( Client, CHAN_ITEM, "ecx.vegetto/t_ssj.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				setClientHiddenPOWERUP( Client, true );
				AddFx( Client, "fxAvatar", "create", 101, 0.7 );

				set_task( 0.0, "fxAura2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 10.0, "fxAura3", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.1, "fxAura4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 9.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 10.2, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );

				set_task( 1.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 2.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",5 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );

				set_task( 19.5, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );

			}
			
			case 3:
			{
				emit_sound( Client, CHAN_ITEM, "ecx.vegetto/t_ssj.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				setClientHiddenPOWERUP( Client, true );
				AddFx( Client, "fxAvatar", "create", 101, 0.7 );

				set_task( 0.0, "fxAura2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 10.0, "fxAura3", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 10.1, "fxAura4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 9.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 10.2, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );

				set_task( 1.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",6 );
				set_task( 2.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",5 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
					set_task( i, "fxLight", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );

				set_task( 19.5, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );

			}
			
			case 4:
			{
				emit_sound( Client, CHAN_ITEM, "ecx.vegetto/t_ssj.wav", 1.0, ATTN_NORM, 0, PITCH_NORM );
				set_task( 0.0, "fxAura2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "ModelChangeblau", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				//setClientANIMATION(Client,102,0.5);
				setClientHiddenPOWERUP( Client, true );
				AddFx( Client, "fxAvatar", "create", 101, 1.0 );
				set_task( 0.0, "fxblau", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.1, "fxAura15", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.0, "fxAura3", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.1, "fxAura4", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",2 );
				set_task( 0.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 0.1, "fxLgt", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				for ( new Float:i=10.0; i<=20.0; i++ )
				setClientHiddenPOWERUP( Client, true );
				AddFx( Client, "fxAvatar", "create", 101, 1.0 );
				AddFx( Client, "fxAvatar", "create", 103, 1.0 );
				set_task( 0.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.1, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "ModelChangeblau2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 1.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 5.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.2, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.3, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 1.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlowSpecial", uniqueTaskID( Client,100 ), CORE, 1, "a",2 );
				set_task( 0.2, "fxsphere", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxssj45", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxssj45", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 0.5, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 1.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 1.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxScream3", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 2.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 3.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxCamBack", uniqueTaskID( Client,100 ), CORE, 1, "a",10 );
				set_task( 2.0, "fxFinalBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.4, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.7, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.9, "fxBlow", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.5, "fxLgt2", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.0, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
				set_task( 4.6, "fxPwave", uniqueTaskID( Client,100 ), CORE, 1, "a",1 );
			}

		}
	}
}

public @ClassFinishTransformation ( Client, Level )
{

	//setClientANIMATION(Client,-1);
	RemFx( Client, "fxAvatar", 0);

	AddFx( Client, "fxBlow" );
	FX_off(Client);

	remove_task( uniqueTaskID( Client, 100 ) );
}

public @ClassCancelTransformation ( Client, Level )
{
	//setClientANIMATION(Client,-1);
	RemFx( Client, "fxAvatar", 0);

	FX_off(Client);

	remove_task( uniqueTaskID( Client, 100 ) );
}
