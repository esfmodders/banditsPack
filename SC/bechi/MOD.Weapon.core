#define MOD_WEAPON_DBG 0
stock SPR_SHINE;		// Shine
stock SPR_purple_S;		// Yellow Beam Head
stock SPR_purple_T;		// Yellow Beam Trail
stock SPR_purple_E
stock SPR_MSB;
stock ICON_KAMEHAMEHA;
stock ICON_RENZOKU;
stock C_ICON_SPEEDBEAM;
stock ICON_FINALFLASH
stock ICON_BIGBANG
stock C_ICON_HYPERWAVE;
stock C_ICON_HYPERBLAST;
stock MOD_Weapon_PreCache ()
{
	SPR_SHINE = precache_model( "sprites/ecx.shine.spr" );
	SPR_purple_S = precache_model( "sprites/w_gb_p_s.spr" );
	SPR_purple_E = precache_model( "sprites/redexplosion.spr" );
	SPR_purple_T = precache_model( "sprites/w_gb_p_t.spr" );
	ICON_RENZOKU = getIconINDEX( "weapon_renzoku");
	ICON_FINALFLASH = getIconINDEX( "weapon_finalflash");
	ICON_BIGBANG = getIconINDEX( "weapon_bigbang");	
	C_ICON_SPEEDBEAM = createCustomICON("c_weapon_speedbeams", { 3, 1 } );
	C_ICON_HYPERBLAST = createCustomICON("c_weapon_hyperblast", { 3, 1 } );
	C_ICON_HYPERWAVE = createCustomICON("c_weapon_hyperwave", { 3, 1 } );
}
public @IconUpdate ( Client, Level )
{
	if( Level == 0 )
		replaceClientICON( Client , C_ICON_SPEEDBEAM, ICON_RENZOKU );
	else if( Level == 1 )
		replaceClientICON( Client , C_ICON_SPEEDBEAM, ICON_RENZOKU );
	else if( Level == 2 )
		replaceClientICON( Client , C_ICON_SPEEDBEAM, ICON_RENZOKU );
	else if( Level == 3 )
		replaceClientICON( Client , C_ICON_SPEEDBEAM, ICON_RENZOKU );
	else if( Level == 4 )
		replaceClientICON( Client , C_ICON_SPEEDBEAM, ICON_RENZOKU );
	else if( Level == 0 )
		replaceClientICON( Client , C_ICON_HYPERWAVE, ICON_FINALFLASH  );
	else if( Level == 1 )
		replaceClientICON( Client , C_ICON_HYPERWAVE, ICON_FINALFLASH  );
	else if( Level == 2 )
		replaceClientICON( Client , C_ICON_HYPERWAVE, ICON_FINALFLASH  );
	else if( Level == 3 )
		replaceClientICON( Client , C_ICON_HYPERWAVE, ICON_FINALFLASH  );
	else if( Level == 4 )
		replaceClientICON( Client , C_ICON_HYPERWAVE, ICON_FINALFLASH  );
	else if( Level == 0 )
		replaceClientICON( Client , C_ICON_HYPERBLAST, ICON_BIGBANG  );
	else if( Level == 1 )
		replaceClientICON( Client , C_ICON_HYPERBLAST, ICON_BIGBANG  );
	else if( Level == 2 )
		replaceClientICON( Client , C_ICON_HYPERBLAST, ICON_BIGBANG  );
	else if( Level == 3 )
		replaceClientICON( Client , C_ICON_HYPERBLAST, ICON_BIGBANG  );
	else if( Level == 4 )
		replaceClientICON( Client , C_ICON_HYPERBLAST, ICON_BIGBANG  );				
}
public @BaseWeaponCreation ( Client, BaseWeapon, const Name[] )
{
	if ( equal( Name, "weapon_bigbang" ) && getClientLEVEL( Client ) > 0 )
	{
		setBeamChargeTime( BaseWeapon, 15 );
		setBeamChargeKi( BaseWeapon, 25 );
	}
	if ( equal( Name, "weapon_renzoku" ) && getClientLEVEL( Client ) == 0 )
	{
		setBeamChargeTime( BaseWeapon, 8 );
		setBeamChargeKi( BaseWeapon, 10 );
		setBeamSpeed( BaseWeapon, 2850 );
	}
	if ( equal( Name, "weapon_finalflash" ) && getClientLEVEL( Client ) == 0 )
	{
		setBeamChargeTime( BaseWeapon, 30 );
		setBeamChargeKi( BaseWeapon, 5 );
		setBeamSpeed( BaseWeapon, 750 );
	}
	if ( equal( Name, "weapon_specialbeamcannon" ) && getClientLEVEL( Client ) > 0 )
	{
		setBeamChargeTime( BaseWeapon, 1 );
		setBeamChargeKi( BaseWeapon, 10 );
		setBeamSpeed( BaseWeapon, 1550 );
	}
}
public @WeaponAdjust ( Client, Weapon, const Class[] )
{
	if ( equal( Class, "greenattack" ) && getClientLEVEL(Client) == 0 )
	{	
		setWeaponXPC( 3 );
		setWeaponXPM( 6.5 );
	}
	else if ( equal( Class, "greenattack" ) )
		setWeaponXPC( 3 );
	if ( equal( Class, "bigbang" ) && getClientLEVEL( Client ) == 4 )
	{
		setWeaponXPC( 1 );
		setWeaponXPM( 8.0 );
		setWeaponDMG( 37.5, 350.0, 4.11 );
	}
	else if ( equal( Class, "bigbang" ) && getClientLEVEL( Client ) == 3 )
	{
		setWeaponXPC( 1 );
		setWeaponXPM( 7.0 );
		setWeaponDMG( 32.3, 300.0, 2.09 );
	}
	else if ( equal( Class, "bigbang" ) )
	{
		setWeaponXPC( 1 );
		setWeaponXPM( 5.0 );
		setWeaponDMG( 17.0, 200.0, 0.07 );
	}
	if ( equal( Class, "kamehameha" ) && getClientLEVEL( Client ) == 0 )
	{
		setWeaponXPC( 3 );
		setWeaponXPM( 22.5 );
		setWeaponDMG( 50.0, 520.5, 8.13 );
	}
	if ( equal( Class, "specialbeamcannon" ) && getClientLEVEL( Client ) == 0 )
	{
		setWeaponXPC( 1 );
		setWeaponXPM( 12.5 );
		setWeaponDMG( 40.0, 420.5, 6.13 );
	}
	else if ( equal( Class, "finalflash" ) && getClientLEVEL( Client ) == 0 )
	{
		setWeaponXPC( 1 );
		setWeaponXPM( 9.0 );
		setWeaponDMG( 30.5, 375.0, 4.11 );
	}
	else if ( equal( Class, "finalflash" ) )
	{
		setWeaponXPC( 1 );
		setWeaponXPM( 7.5 );
		setWeaponDMG( 15.0, 220.5, 0.08 );
	}
	if ( equal( Class, "kiblast" ) && getClientLEVEL( Client ) == 0 )
	{
		setWeaponXPM( 2.2 );
		setWeaponXPC( 5 );
		
		message_begin	( MSG_BROADCAST, SVC_TEMPENTITY );
		write_byte		( TE_BEAMFOLLOW );
		write_short		( Weapon );
		write_short		( SPR_purple_T );
		write_byte		( 9 );
		write_byte		( 5 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		write_byte		( 255 );
		message_end		();
		
	}
	
}
public @WeaponBeam ( Client, Weapon, const Class[], Size )
{
	if ( equal( Class, "greenattack" ) && getClientLEVEL(Client) >= 0 )
	{
		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 8, ARG_SHORT, SPR_purple_T );
	}
	else if ( equal( Class, "greenattack" ) )
	{
		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 8, ARG_SHORT, SPR_purple_T );
	}
	if ( equal( Class, "kamehameha" ) && getClientLEVEL( Client ) == 0 )
	{
		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_purple_E );
		set_msg_arg_int( 8, ARG_SHORT, SPR_purple_T );
		set_msg_arg_int( 9, ARG_BYTE, 22 );
	}
	else if ( equal( Class, "finalflash" ) )
	{
		set_msg_arg_int( 4, ARG_SHORT, SPR_SHINE );
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_purple_E );
		set_msg_arg_int( 8, ARG_SHORT, SPR_purple_T );
		set_msg_arg_int( 9, ARG_BYTE, 22 );
	}

}
public @WeaponBlast ( Client, Weapon, const Class[], Size )
{
	if ( equal( Class, "greenattack" ) && getClientLEVEL( Client ) > 0 )
	{
		set_msg_arg_int( 2, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 3, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_T );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_T );
	}
	else if ( equal( Class, "greenattack" ))
	{
		set_msg_arg_int( 2, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 3, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_T );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_T );
	}
	if ( equal( Class, "kiblast" ) && getClientLEVEL( Client ) == 0 )
	{
		set_msg_arg_int( 2, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 3, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_T );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_T );
		set_msg_arg_int( 4, ARG_SHORT, 6 );
	}
	else if ( equal( Class, "kiblast" ) && getClientLEVEL( Client ) == 0 )
	{	
		set_msg_arg_int( 2, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 3, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_T );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_T );
		set_msg_arg_int( 4, ARG_SHORT, 6 );
	}
	if ( equal( Class, "bigbang" ) && getClientLEVEL( Client ) == 0 )

	{
		attachWeaponHEAD( Weapon, "sprites/w_gb_g_s.spr", kRenderTransAdd, 250.0, 1.0, 10.0 );
		
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_purple_E );
		set_msg_arg_int( 8, ARG_SHORT, SPR_purple_E );
		set_msg_arg_int( 9, ARG_BYTE, 9 );
	}
	else if ( equal( Class, "bigbang" ) )
	{
		attachWeaponHEAD( Weapon, "sprites/w_gb_g_s.spr", kRenderTransAdd, 250.0, 1.0, 10.0 );
			
		set_msg_arg_int( 5, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 6, ARG_SHORT, SPR_purple_S );
		set_msg_arg_int( 7, ARG_SHORT, SPR_purple_E );
		set_msg_arg_int( 8, ARG_SHORT, SPR_purple_E );
		set_msg_arg_int( 9, ARG_BYTE, 9 );
	}
}

public @WeaponDeath ( Client, Killer, const Weapon[] )
{
	if ( equal( Weapon, "greenattack" ) && getClientLEVEL( Killer ) == 0 )
		set_msg_arg_string( 3, "Awesome-attack" );
	if ( equal( Weapon, "kamehameha" ) && getClientLEVEL( Killer ) == 0 )
		set_msg_arg_string( 3, "Even more Awesome attack" );
	
	
}